{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"archivo_principal/","text":"Documentaci\u00f3n del Programa de Pron\u00f3stico del Clima con Imagen Este programa utiliza la API de OpenWeather para proporcionar informaci\u00f3n sobre el clima de diferentes ciudades. Adem\u00e1s, muestra una imagen en la terminal. M\u00f3dulos Importados climage : M\u00f3dulo para manejar la conversi\u00f3n de im\u00e1genes. csv : M\u00f3dulo para trabajar con archivos CSV. ciudad_dataset_destino y ciudades_dataset_origen : M\u00f3dulos propios para obtener datos de las ciudades. hora : M\u00f3dulo propio para manejar el tiempo. Funci\u00f3n imagen_terminal Descripci\u00f3n La funci\u00f3n imagen_terminal se encarga de cargar una imagen desde una ruta espec\u00edfica y mostrarla en la terminal. Par\u00e1metros Ninguno. Comportamiento La funci\u00f3n toma la ruta de la imagen desde una ubicaci\u00f3n espec\u00edfica. Luego, utiliza el m\u00f3dulo climage para cargar y convertir la imagen. Finalmente, muestra la imagen en la terminal. Ejecuci\u00f3n Principal El programa principal realiza las siguientes acciones: Llama a imagen_terminal para mostrar una imagen en la terminal. Llama a ciudades_dataset_origen.clima_ciudades_origen para obtener y mostrar el pron\u00f3stico del clima de ciudades de origen. Imprime una l\u00ednea para separar el texto. Llama a ciudad_dataset_destino.clima_ciudades_destino para obtener y mostrar el pron\u00f3stico del clima de ciudades de destino. Ejemplo de Uso ```python Importar los m\u00f3dulos import climage import csv import ciudad_dataset_destino import ciudades_dataset_origen from hora import * Definir la funci\u00f3n imagen_terminal y su comportamiento ... Llamar a imagen_terminal para mostrar una imagen en la terminal imagen_terminal() Llamar a ciudades_dataset_origen.clima_ciudades_origen para obtener el clima de ciudades de origen ciudades_dataset_origen.clima_ciudades_origen() Imprimir una l\u00ednea de separaci\u00f3n print('--------------------------------------------------') Llamar a ciudad_dataset_destino.clima_ciudades_destino para obtener el clima de ciudades de destino ciudad_dataset_destino.clima_ciudades_destino()","title":"Archivo Principal"},{"location":"archivo_principal/#documentacion-del-programa-de-pronostico-del-clima-con-imagen","text":"Este programa utiliza la API de OpenWeather para proporcionar informaci\u00f3n sobre el clima de diferentes ciudades. Adem\u00e1s, muestra una imagen en la terminal.","title":"Documentaci\u00f3n del Programa de Pron\u00f3stico del Clima con Imagen"},{"location":"archivo_principal/#modulos-importados","text":"climage : M\u00f3dulo para manejar la conversi\u00f3n de im\u00e1genes. csv : M\u00f3dulo para trabajar con archivos CSV. ciudad_dataset_destino y ciudades_dataset_origen : M\u00f3dulos propios para obtener datos de las ciudades. hora : M\u00f3dulo propio para manejar el tiempo.","title":"M\u00f3dulos Importados"},{"location":"archivo_principal/#funcion-imagen_terminal","text":"","title":"Funci\u00f3n imagen_terminal"},{"location":"archivo_principal/#descripcion","text":"La funci\u00f3n imagen_terminal se encarga de cargar una imagen desde una ruta espec\u00edfica y mostrarla en la terminal.","title":"Descripci\u00f3n"},{"location":"archivo_principal/#parametros","text":"Ninguno.","title":"Par\u00e1metros"},{"location":"archivo_principal/#comportamiento","text":"La funci\u00f3n toma la ruta de la imagen desde una ubicaci\u00f3n espec\u00edfica. Luego, utiliza el m\u00f3dulo climage para cargar y convertir la imagen. Finalmente, muestra la imagen en la terminal.","title":"Comportamiento"},{"location":"archivo_principal/#ejecucion-principal","text":"El programa principal realiza las siguientes acciones: Llama a imagen_terminal para mostrar una imagen en la terminal. Llama a ciudades_dataset_origen.clima_ciudades_origen para obtener y mostrar el pron\u00f3stico del clima de ciudades de origen. Imprime una l\u00ednea para separar el texto. Llama a ciudad_dataset_destino.clima_ciudades_destino para obtener y mostrar el pron\u00f3stico del clima de ciudades de destino.","title":"Ejecuci\u00f3n Principal"},{"location":"archivo_principal/#ejemplo-de-uso","text":"```python","title":"Ejemplo de Uso"},{"location":"archivo_principal/#importar-los-modulos","text":"import climage import csv import ciudad_dataset_destino import ciudades_dataset_origen from hora import *","title":"Importar los m\u00f3dulos"},{"location":"archivo_principal/#definir-la-funcion-imagen_terminal-y-su-comportamiento","text":"","title":"Definir la funci\u00f3n imagen_terminal y su comportamiento"},{"location":"archivo_principal/#_1","text":"","title":"..."},{"location":"archivo_principal/#llamar-a-imagen_terminal-para-mostrar-una-imagen-en-la-terminal","text":"imagen_terminal()","title":"Llamar a imagen_terminal para mostrar una imagen en la terminal"},{"location":"archivo_principal/#llamar-a-ciudades_dataset_origenclima_ciudades_origen-para-obtener-el-clima-de-ciudades-de-origen","text":"ciudades_dataset_origen.clima_ciudades_origen()","title":"Llamar a ciudades_dataset_origen.clima_ciudades_origen para obtener el clima de ciudades de origen"},{"location":"archivo_principal/#imprimir-una-linea-de-separacion","text":"print('--------------------------------------------------')","title":"Imprimir una l\u00ednea de separaci\u00f3n"},{"location":"archivo_principal/#llamar-a-ciudad_dataset_destinoclima_ciudades_destino-para-obtener-el-clima-de-ciudades-de-destino","text":"ciudad_dataset_destino.clima_ciudades_destino()","title":"Llamar a ciudad_dataset_destino.clima_ciudades_destino para obtener el clima de ciudades de destino"},{"location":"ciudad_dataset_destino/","text":"Programa para proporcionar el clima de diferentes ciudades Este programa utiliza la API de OpenWeather para proporcionar informaci\u00f3n sobre el clima de diversas ciudades. El usuario puede ingresar una ciudad de destino y obtener datos como temperatura, presi\u00f3n, humedad, descripci\u00f3n del clima, amanecer y puesta de sol. Configuraci\u00f3n de la clave API El programa primero verifica si existe un archivo llave_api.txt para obtener la clave API de OpenWeather. Si el archivo no existe, se utiliza una clave API predeterminada. Uso Para utilizar el programa, sigue estos pasos: Ejecuta el programa en tu terminal. Si existe el archivo llave_api.txt , la clave API se leer\u00e1 desde ese archivo. De lo contrario, se utilizar\u00e1 la clave API predeterminada. Ingresa la ciudad de destino cuando se te solicite. El programa consultar\u00e1 la API de OpenWeather y mostrar\u00e1 los datos del clima de la ciudad. Funciones clima_ciudades_destino() Esta funci\u00f3n se encarga de obtener y mostrar los datos del clima de la ciudad de destino ingresada por el usuario. Los datos incluyen temperatura, presi\u00f3n, humedad, descripci\u00f3n del clima, amanecer y puesta de sol. ```python def clima_ciudades_destino(): # ... # C\u00f3digo de la funci\u00f3n clima_ciudades_destino # ... Ejemplo de Uso ```python Importar los m\u00f3dulos import requests import hora import os from leer_csv import * from time import timezone Definir api_key, url y ciudad_dest if os.path.isfile(\"llave_api.txt\"): with open(\"llave_api.txt\", \"r\") as archivo: api_key = archivo.read().strip() else: api_key = 'TU_LLAVE_API' url = \"http://api.openweathermap.org/data/2.5/weather?\" ciudad_dest = input(\"Ingresa la ciudad de destino: \") Realizar una solicitud HTTP para obtener los datos del clima res1 = requests.get(url + \"appid=\" + api_key + \"&q=\" + ciudad_dest) datos_ciudad2 = res1.json() Llamar a la funci\u00f3n para mostrar el clima de la ciudad de destino clima_ciudades_destino()","title":"Ciudad Dataset Destino"},{"location":"ciudad_dataset_destino/#programa-para-proporcionar-el-clima-de-diferentes-ciudades","text":"Este programa utiliza la API de OpenWeather para proporcionar informaci\u00f3n sobre el clima de diversas ciudades. El usuario puede ingresar una ciudad de destino y obtener datos como temperatura, presi\u00f3n, humedad, descripci\u00f3n del clima, amanecer y puesta de sol.","title":"Programa para proporcionar el clima de diferentes ciudades"},{"location":"ciudad_dataset_destino/#configuracion-de-la-clave-api","text":"El programa primero verifica si existe un archivo llave_api.txt para obtener la clave API de OpenWeather. Si el archivo no existe, se utiliza una clave API predeterminada.","title":"Configuraci\u00f3n de la clave API"},{"location":"ciudad_dataset_destino/#uso","text":"Para utilizar el programa, sigue estos pasos: Ejecuta el programa en tu terminal. Si existe el archivo llave_api.txt , la clave API se leer\u00e1 desde ese archivo. De lo contrario, se utilizar\u00e1 la clave API predeterminada. Ingresa la ciudad de destino cuando se te solicite. El programa consultar\u00e1 la API de OpenWeather y mostrar\u00e1 los datos del clima de la ciudad.","title":"Uso"},{"location":"ciudad_dataset_destino/#funciones","text":"","title":"Funciones"},{"location":"ciudad_dataset_destino/#clima_ciudades_destino","text":"Esta funci\u00f3n se encarga de obtener y mostrar los datos del clima de la ciudad de destino ingresada por el usuario. Los datos incluyen temperatura, presi\u00f3n, humedad, descripci\u00f3n del clima, amanecer y puesta de sol. ```python def clima_ciudades_destino(): # ... # C\u00f3digo de la funci\u00f3n clima_ciudades_destino # ...","title":"clima_ciudades_destino()"},{"location":"ciudad_dataset_destino/#ejemplo-de-uso","text":"```python","title":"Ejemplo de Uso"},{"location":"ciudad_dataset_destino/#importar-los-modulos","text":"import requests import hora import os from leer_csv import * from time import timezone","title":"Importar los m\u00f3dulos"},{"location":"ciudad_dataset_destino/#definir-api_key-url-y-ciudad_dest","text":"if os.path.isfile(\"llave_api.txt\"): with open(\"llave_api.txt\", \"r\") as archivo: api_key = archivo.read().strip() else: api_key = 'TU_LLAVE_API' url = \"http://api.openweathermap.org/data/2.5/weather?\" ciudad_dest = input(\"Ingresa la ciudad de destino: \")","title":"Definir api_key, url y ciudad_dest"},{"location":"ciudad_dataset_destino/#realizar-una-solicitud-http-para-obtener-los-datos-del-clima","text":"res1 = requests.get(url + \"appid=\" + api_key + \"&q=\" + ciudad_dest) datos_ciudad2 = res1.json()","title":"Realizar una solicitud HTTP para obtener los datos del clima"},{"location":"ciudad_dataset_destino/#llamar-a-la-funcion-para-mostrar-el-clima-de-la-ciudad-de-destino","text":"clima_ciudades_destino()","title":"Llamar a la funci\u00f3n para mostrar el clima de la ciudad de destino"},{"location":"ciudad_dataset_origen/","text":"Documentaci\u00f3n del Programa para Obtener el Clima de Ciudades Este programa permite a los usuarios obtener informaci\u00f3n sobre el clima de una ciudad de origen. Utiliza la API de OpenWeather para obtener los datos clim\u00e1ticos. Configuraci\u00f3n de la Clave API El programa verifica si existe un archivo llamado \"llave_api.txt\" que contiene una clave API para OpenWeather. Si el archivo existe, se lee la clave API desde el archivo. Si no existe, se utiliza una clave API predeterminada. Uso Ejecute el programa en su terminal. Si existe el archivo \"llave_api.txt\", la clave API se leer\u00e1 desde ese archivo. Ingrese la ciudad de origen cuando se le solicite. El programa consultar\u00e1 la API de OpenWeather y mostrar\u00e1 los datos clim\u00e1ticos de la ciudad de origen en la consola. Funci\u00f3n clima_ciudades_origen() Esta funci\u00f3n se encarga de procesar los datos clim\u00e1ticos recibidos de la API de OpenWeather y mostrar la informaci\u00f3n en la consola. ```python def clima_ciudades_origen(): # ... # C\u00f3digo de la funci\u00f3n clima_ciudades_origen # ... Ejemplo de Uso ```python Importar los m\u00f3dulos import requests import csv import os from leer_csv import * Definir api_key, url y ciudad if os.path.isfile(\"llave_api.txt\"): with open(\"llave_api.txt\", \"r\") as archivo: api_key = archivo.read().strip() else: api_key = 'TU_LLAVE_API' url = \"http://api.openweathermap.org/data/2.5/weather?\" ciudad = input(\"Ingresa la ciudad de origen: \") Realizar una solicitud HTTP para obtener los datos del clima res = requests.get(url + \"appid=\" + api_key + \"&q=\" + ciudad) datos_ciudad1 = res.json() Llamar a la funci\u00f3n para mostrar el clima clima_ciudades_origen()","title":"Ciudad Dataset Origen"},{"location":"ciudad_dataset_origen/#documentacion-del-programa-para-obtener-el-clima-de-ciudades","text":"Este programa permite a los usuarios obtener informaci\u00f3n sobre el clima de una ciudad de origen. Utiliza la API de OpenWeather para obtener los datos clim\u00e1ticos.","title":"Documentaci\u00f3n del Programa para Obtener el Clima de Ciudades"},{"location":"ciudad_dataset_origen/#configuracion-de-la-clave-api","text":"El programa verifica si existe un archivo llamado \"llave_api.txt\" que contiene una clave API para OpenWeather. Si el archivo existe, se lee la clave API desde el archivo. Si no existe, se utiliza una clave API predeterminada.","title":"Configuraci\u00f3n de la Clave API"},{"location":"ciudad_dataset_origen/#uso","text":"Ejecute el programa en su terminal. Si existe el archivo \"llave_api.txt\", la clave API se leer\u00e1 desde ese archivo. Ingrese la ciudad de origen cuando se le solicite. El programa consultar\u00e1 la API de OpenWeather y mostrar\u00e1 los datos clim\u00e1ticos de la ciudad de origen en la consola.","title":"Uso"},{"location":"ciudad_dataset_origen/#funcion-clima_ciudades_origen","text":"Esta funci\u00f3n se encarga de procesar los datos clim\u00e1ticos recibidos de la API de OpenWeather y mostrar la informaci\u00f3n en la consola. ```python def clima_ciudades_origen(): # ... # C\u00f3digo de la funci\u00f3n clima_ciudades_origen # ...","title":"Funci\u00f3n clima_ciudades_origen()"},{"location":"ciudad_dataset_origen/#ejemplo-de-uso","text":"```python","title":"Ejemplo de Uso"},{"location":"ciudad_dataset_origen/#importar-los-modulos","text":"import requests import csv import os from leer_csv import *","title":"Importar los m\u00f3dulos"},{"location":"ciudad_dataset_origen/#definir-api_key-url-y-ciudad","text":"if os.path.isfile(\"llave_api.txt\"): with open(\"llave_api.txt\", \"r\") as archivo: api_key = archivo.read().strip() else: api_key = 'TU_LLAVE_API' url = \"http://api.openweathermap.org/data/2.5/weather?\" ciudad = input(\"Ingresa la ciudad de origen: \")","title":"Definir api_key, url y ciudad"},{"location":"ciudad_dataset_origen/#realizar-una-solicitud-http-para-obtener-los-datos-del-clima","text":"res = requests.get(url + \"appid=\" + api_key + \"&q=\" + ciudad) datos_ciudad1 = res.json()","title":"Realizar una solicitud HTTP para obtener los datos del clima"},{"location":"ciudad_dataset_origen/#llamar-a-la-funcion-para-mostrar-el-clima","text":"clima_ciudades_origen()","title":"Llamar a la funci\u00f3n para mostrar el clima"},{"location":"hora/","text":"Documentaci\u00f3n de la Funci\u00f3n tiempo_de_puesta_de_sol_amanecer Esta funci\u00f3n calcula y proporciona el tiempo en el que se producir\u00e1 el amanecer o la puesta de sol en una ciudad de destino. Utiliza una marca de tiempo (timestamp) como entrada y devuelve la hora local correspondiente. Funci\u00f3n tiempo_de_puesta_de_sol_amanecer Descripci\u00f3n La funci\u00f3n tiempo_de_puesta_de_sol_amanecer toma una marca de tiempo como argumento y calcula la hora en que ocurrir\u00e1 el amanecer o la puesta de sol en la ciudad de destino. Par\u00e1metros da_horas (int): La marca de tiempo (timestamp) que representa el momento para el cual se desea conocer la hora de amanecer o puesta de sol. Valor de Retorno datetime.time : Devuelve la hora local en la que se producir\u00e1 el amanecer o la puesta de sol. Ejemplo de Uso ```python from datetime import datetime from tu_modulo import tiempo_de_puesta_de_sol_amanecer Supongamos que da_horas es un timestamp v\u00e1lido da_horas = 1628809200 # Ejemplo de timestamp hora_amanecer = tiempo_de_puesta_de_sol_amanecer(da_horas) print(f\"Hora del amanecer: {hora_amanecer}\")","title":"Hora"},{"location":"hora/#documentacion-de-la-funcion-tiempo_de_puesta_de_sol_amanecer","text":"Esta funci\u00f3n calcula y proporciona el tiempo en el que se producir\u00e1 el amanecer o la puesta de sol en una ciudad de destino. Utiliza una marca de tiempo (timestamp) como entrada y devuelve la hora local correspondiente.","title":"Documentaci\u00f3n de la Funci\u00f3n tiempo_de_puesta_de_sol_amanecer"},{"location":"hora/#funcion-tiempo_de_puesta_de_sol_amanecer","text":"","title":"Funci\u00f3n tiempo_de_puesta_de_sol_amanecer"},{"location":"hora/#descripcion","text":"La funci\u00f3n tiempo_de_puesta_de_sol_amanecer toma una marca de tiempo como argumento y calcula la hora en que ocurrir\u00e1 el amanecer o la puesta de sol en la ciudad de destino.","title":"Descripci\u00f3n"},{"location":"hora/#parametros","text":"da_horas (int): La marca de tiempo (timestamp) que representa el momento para el cual se desea conocer la hora de amanecer o puesta de sol.","title":"Par\u00e1metros"},{"location":"hora/#valor-de-retorno","text":"datetime.time : Devuelve la hora local en la que se producir\u00e1 el amanecer o la puesta de sol.","title":"Valor de Retorno"},{"location":"hora/#ejemplo-de-uso","text":"```python from datetime import datetime from tu_modulo import tiempo_de_puesta_de_sol_amanecer","title":"Ejemplo de Uso"},{"location":"hora/#supongamos-que-da_horas-es-un-timestamp-valido","text":"da_horas = 1628809200 # Ejemplo de timestamp hora_amanecer = tiempo_de_puesta_de_sol_amanecer(da_horas) print(f\"Hora del amanecer: {hora_amanecer}\")","title":"Supongamos que da_horas es un timestamp v\u00e1lido"},{"location":"leer_csv/","text":"Documentaci\u00f3n del Archivo CSV Este m\u00f3dulo se encarga de leer un archivo CSV que contiene datos sobre lugares de origen y destino. Luego, procesa y almacena estos datos en variables. Funci\u00f3n leer_csv Descripci\u00f3n La funci\u00f3n leer_csv se encarga de leer un archivo CSV y extraer informaci\u00f3n relevante de \u00e9l, como lugares de origen y destino, y las coordenadas geogr\u00e1ficas correspondientes. Par\u00e1metros ruta (str): La ruta del archivo CSV que se va a leer. Ejemplo de Uso ```python import csv ruta = '/ruta/al/archivo.csv' leer_csv(ruta)","title":"Leer CSV"},{"location":"leer_csv/#documentacion-del-archivo-csv","text":"Este m\u00f3dulo se encarga de leer un archivo CSV que contiene datos sobre lugares de origen y destino. Luego, procesa y almacena estos datos en variables.","title":"Documentaci\u00f3n del Archivo CSV"},{"location":"leer_csv/#funcion-leer_csv","text":"","title":"Funci\u00f3n leer_csv"},{"location":"leer_csv/#descripcion","text":"La funci\u00f3n leer_csv se encarga de leer un archivo CSV y extraer informaci\u00f3n relevante de \u00e9l, como lugares de origen y destino, y las coordenadas geogr\u00e1ficas correspondientes.","title":"Descripci\u00f3n"},{"location":"leer_csv/#parametros","text":"ruta (str): La ruta del archivo CSV que se va a leer.","title":"Par\u00e1metros"},{"location":"leer_csv/#ejemplo-de-uso","text":"```python import csv ruta = '/ruta/al/archivo.csv' leer_csv(ruta)","title":"Ejemplo de Uso"}]}